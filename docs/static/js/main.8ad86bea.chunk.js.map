{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifItem.js","components/Carga.js","components/GifGrid.js","hooks/useFetchGifs.js","components/SelColores.js","components/GifExpertApp.js","index.js","images/loading.gif"],"names":["AddCategory","setCategorias","useState","input","setInput","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifData","map","img","id","title","images","downsized_medium","GifItem","color","colorStyle","background","className","href","src","alt","key","style","Carga","loader","GifGrid","col","loading","estado","setEstado","useEffect","then","imgs","useFetchGifs","defaultProps","SelColores","colorActual","setColorActual","handleColorClick","console","info","dataset","currentTarget","estiloColor","onClick","data-color","GifExpertApp","categorias","setcolor","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8ad86bea.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({ setCategorias }) {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(e.target.value);\r\n        if (input.trim().length > 2) {\r\n            setCategorias(cat => [input, ...cat]);\r\n            setInput('');\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h3 > Agregar categor√≠a: </h3> \r\n            <form onSubmit = { handleSubmit } >\r\n                <input type = \"text\"\r\n                value = { input }\r\n                onChange = { handleChange }\r\n                /> \r\n                <button> Enviar </button>\r\n\r\n            </form> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=PTjpLvexMsaPA8HGX2EDOPipPC3Jrr1r&q=${ encodeURI(category)}&limit=10`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifData = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifData;\r\n\r\n};","import React  from 'react';\r\n\r\nconst GifItem = ({color, img}) => {\r\n\r\n    const colorStyle = {\r\n        color: color,\r\n        background: 'grey'\r\n    }\r\n\r\n    return (\r\n        <div className='card animate__animated animate__flipInY '>\r\n            <a href={img.url}><img className='animate__animated animate__fadeIn animate__delay-1s' src={img.url} alt={img.title} key={img.id}></img></a>\r\n            <p style={colorStyle}>{img.title}</p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default GifItem;","import React from 'react';\r\nimport loader from '../images/loading.gif';\r\n \r\nconst Carga = () => {\r\n    return (\r\n        <div>\r\n            <img className='loading' src={loader} alt='Cargando...'></img>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Carga;","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifItem from \"./GifItem\";\r\nimport Carga from \"./Carga\";\r\n\r\n// import { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nconst GifGrid = ({category, col}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    //const color = 'white'; \r\n\r\n    \r\n\r\n    // const [imagenes, setImagenes] = useState([]);\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category).then(imgs => setImagenes(imgs))\r\n    // }, [ category]);\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n      \r\n      <h3>{category}</h3>\r\n      {loading && <Carga></Carga>}\r\n      <div className='card-grid'>\r\n            \r\n                { images.map( img => { \r\n                    return <GifItem color={col} img={img} key={img.id}></GifItem>\r\n                }) }\r\n            \r\n        </div>\r\n      </div>\r\n        \r\n      </Fragment>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string\r\n};\r\n\r\nGifGrid.defaultProps = {\r\n    category: 'nada'\r\n};\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [estado, setEstado] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => setEstado({\r\n                data: imgs,\r\n                loading: false\r\n            }))\r\n    }, [category]);\r\n\r\n    return estado;\r\n}","import React, {Fragment, useState, useEffect} from \"react\";\r\n\r\nconst SelColores = ({color}) => {\r\n    const coloresDisponibles = ['green', 'red', 'blue', 'white', 'black', 'orange', 'grey'];\r\n\r\n    const [colorActual, setColorActual] = useState('');\r\n    useEffect(() => {\r\n        color(colorActual);\r\n    }, [colorActual]);\r\n\r\n    function handleColorClick (e)  {\r\n        console.info(e.target.dataset.color);\r\n        // e.preventDefault();\r\n        //setColorActual(e.target.textContent);\r\n        setColorActual(e.currentTarget.dataset.color);\r\n        /*Enviar el color actual al padre */\r\n        //color(colorActual);\r\n    }\r\n\r\n\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n\r\n      <ol className='flex'>\r\n          {\r\n              coloresDisponibles.map(color =>{\r\n                  let estiloColor = { background: color};\r\n                  return <div className='caja-color' key={color} onClick={handleColorClick} data-color={color} style={estiloColor}>{color}</div>\r\n              })\r\n          }\r\n      </ol>\r\n\r\n      </Fragment>\r\n  )\r\n};\r\n\r\n\r\nexport default SelColores;","import React, { Fragment, useState } from 'react'; \r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\nimport SelColores from './SelColores';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // aqui uso el hook useState para comenzar con una array que tiene un valor por defecto:\r\n    const [categorias, setCategorias] = useState(['Dragon Ball Z', 'Final fantasy 7']);\r\n    const [color, setcolor] = useState(null);\r\n    \r\n\r\n        return ( \r\n            <Fragment>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategorias={setCategorias}></AddCategory>\r\n                <hr/>\r\n                <SelColores color={color => setcolor(color)}></SelColores>\r\n                <hr></hr>\r\n                <p>Color actual: { color} </p>\r\n                \r\n                <ol>\r\n                    {\r\n                        categorias.map( category => {\r\n                            return <GifGrid key={category} category={category} col={color}></GifGrid>\r\n                            })\r\n                    }\r\n                </ol>\r\n                \r\n            </Fragment>\r\n        )\r\n    \r\n}\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n/*Componentes: */\r\nimport GifExpertApp from './components/GifExpertApp';\r\n/*Estilos: */\r\nimport './index.css';\r\n\r\nReactDOM.render( < GifExpertApp />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.18848c18.gif\";"],"sourceRoot":""}