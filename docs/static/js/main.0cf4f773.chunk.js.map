{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifItem.js","components/Carga.js","components/GifGrid.js","hooks/useFetchGifs.js","components/SelColores.js","components/Contador.js","components/ContadorConHook.js","components/Coordenadas.js","hooks/useCoordenadasConHooks.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","input","setInput","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifData","map","img","id","title","images","downsized_medium","GifItem","color","colorStyle","background","className","href","src","alt","key","style","Carga","GifGrid","col","loading","estado","setEstado","useEffect","then","imgs","useFetchGifs","defaultProps","SelColores","colorActual","setColorActual","handleColorClick","console","info","dataset","currentTarget","estiloColor","onClick","data-color","Contador","state","cuenta","aumentar","setState","disminuir","this","Component","ContadorConHook","cont","setCont","Coordenadas","coordenadas","latitud","longitud","geoId","window","navigator","geolocation","watchPosition","posicion","coords","latitude","longitude","clearWatch","Coords","coordinates","geoInfo","lat","long","coord","setCoord","pos","useCoordenadasConHooks","GifExpertApp","categorias","setcolor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cf4f773.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({ setCategorias }) {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(e.target.value);\r\n        if (input.trim().length > 2) {\r\n            setCategorias(cat => [input, ...cat]);\r\n            setInput('');\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h3 > Agregar categor√≠a: </h3> \r\n            <form onSubmit = { handleSubmit } >\r\n                <input type = \"text\"\r\n                value = { input }\r\n                onChange = { handleChange }\r\n                /> \r\n                <button> Enviar </button>\r\n\r\n            </form> \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=PTjpLvexMsaPA8HGX2EDOPipPC3Jrr1r&q=${ encodeURI(category)}&limit=20`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifData = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifData;\r\n\r\n};","import React  from 'react';\r\n\r\nconst GifItem = ({color, img}) => {\r\n\r\n    const colorStyle = {\r\n        color: color,\r\n        background: 'grey'\r\n    }\r\n\r\n    return (\r\n        <div className='card animate__animated animate__flipInY '>\r\n            <a href={img.url}><img className='animate__animated animate__fadeIn animate__delay-1s' src={img.url} alt={img.title} key={img.id}></img></a>\r\n            <p style={colorStyle}>{img.title}</p>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default GifItem;","import React from 'react';\r\n \r\nconst Carga = () => {\r\n    return (\r\n        <div>\r\n            <img className='loading' src='https://i.gifer.com/BGzf.gif' alt='Cargando...'></img>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Carga;","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifItem from \"./GifItem\";\r\nimport Carga from \"./Carga\";\r\n\r\n// import { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nconst GifGrid = ({category, col}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    //const color = 'white'; \r\n\r\n    \r\n\r\n    // const [imagenes, setImagenes] = useState([]);\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category).then(imgs => setImagenes(imgs))\r\n    // }, [ category]);\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n      <div>\r\n      \r\n      <h3>{category}</h3>\r\n      {loading && <Carga></Carga>}\r\n      <div className='card-grid'>\r\n            \r\n                { images.map( img => { \r\n                    return <GifItem color={col} img={img} key={img.id}></GifItem>\r\n                }) }\r\n            \r\n        </div>\r\n      </div>\r\n        \r\n      </Fragment>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string\r\n};\r\n\r\nGifGrid.defaultProps = {\r\n    category: 'nada'\r\n};\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [estado, setEstado] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => setEstado({\r\n                data: imgs,\r\n                loading: false\r\n            }))\r\n    }, [category]);\r\n\r\n    return estado;\r\n}","import React, {Fragment, useState, useEffect} from \"react\";\r\n\r\nconst SelColores = ({color}) => {\r\n    const coloresDisponibles = ['green', 'red', 'blue', 'white', 'black', 'orange', 'grey'];\r\n\r\n    const [colorActual, setColorActual] = useState('');\r\n    useEffect(() => {\r\n        color(colorActual);\r\n    }, [colorActual]);\r\n\r\n    function handleColorClick (e)  {\r\n        console.info(e.target.dataset.color);\r\n        // e.preventDefault();\r\n        //setColorActual(e.target.textContent);\r\n        setColorActual(e.currentTarget.dataset.color);\r\n        /*Enviar el color actual al padre */\r\n        //color(colorActual);\r\n    }\r\n\r\n\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n\r\n      <ol className='flex'>\r\n          {\r\n              coloresDisponibles.map(color =>{\r\n                  let estiloColor = { background: color};\r\n                  return <div className='caja-color' key={color} onClick={handleColorClick} data-color={color} style={estiloColor}>{color}</div>\r\n              })\r\n          }\r\n      </ol>\r\n\r\n      </Fragment>\r\n  )\r\n};\r\n\r\n\r\nexport default SelColores;","import React, { Component } from 'react';\r\n \r\nclass Contador extends Component {\r\n    state = {\r\n        cuenta : 0\r\n    }\r\n    aumentar = () => {\r\n        this.setState({ cuenta: this.state.cuenta +1}); \r\n    }\r\n    disminuir = () => {\r\n        if(this.state.cuenta > 0 ) {\r\n            this.setState({cuenta: this.state.cuenta -1});\r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n                <h5>Cuenta: {this.state.cuenta}</h5>\r\n                <button onClick={this.aumentar}>Aumentar cuenta</button>\r\n                <button onClick={this.disminuir}>Disminuir cuenta</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Contador;","import React, {useState} from 'react'\r\n\r\nexport default function ContadorConHook ()  {\r\n    const [cont, setCont] = useState(0);\r\n\r\n    const quitar = () => {\r\n        if (cont > 0) { \r\n            setCont(cont - 1);\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <p>Counter con hook: {cont}</p>\r\n            <button onClick={() => {setCont(cont + 1);}}>Agregar 1</button>\r\n            <button onClick={quitar}>Quitar 1</button>\r\n\r\n            \r\n        </div>\r\n    ); \r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Carga from './Carga';\r\n\r\nexport default class Coordenadas extends Component {\r\n    state = {\r\n        coordenadas : {\r\n            latitud: null,\r\n            longitud: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.state.coordenadas.latitud === null ? (\r\n            <Carga></Carga>\r\n        ) : (\r\n            <div>\r\n                <h3>Latitud: {this.state.coordenadas.latitud}</h3>\r\n                <h3>Longitud: {this.state.coordenadas.longitud}</h3>\r\n            </div>\r\n        )\r\n    }\r\n    //Cuando el componente est√° montado traer la informaci√≥n de geolocalizaci√≥n:\r\n    componentDidMount() {\r\n        this.geoId = window.navigator.geolocation.watchPosition(posicion => {\r\n            this.setState({\r\n                coordenadas: {\r\n                    latitud: posicion.coords.latitude,\r\n                    longitud: posicion.coords.longitude\r\n                }\r\n            })\r\n        })\r\n    };\r\n\r\n    //Cuando se desmonta el componente dejamos de escuchar la info de geolocalizaci√≥n:\r\n    componentWillUnmount() {\r\n        navigator.geolocation.clearWatch(this.geoId);\r\n    }\r\n\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Carga from '../components/Carga';\r\n\r\nfunction useCoordenadasConHooks() {\r\n    /* useState HOOK: */\r\n    const [coord, setCoord] = useState({\r\n        lat: null,\r\n        long: null\r\n    });\r\n    let geoInfo;\r\n\r\n    useEffect(() => {\r\n        geoInfo = window.navigator.geolocation.watchPosition(pos => {\r\n            setCoord({\r\n                lat: pos.coords.latitude,\r\n                long: pos.coords.longitude\r\n            });\r\n        });\r\n\r\n        /*Hace lo mismo que componentWillUnmount */\r\n        return () => {\r\n            window.navigator.geolocation.clearWatch(geoInfo);\r\n        }\r\n    });\r\n\r\n    return coord;\r\n\r\n}\r\n\r\n/*Funci√≥n que usa  */\r\n\r\nconst Coords = () => {\r\n    const coordinates = useCoordenadasConHooks();\r\n\r\n    return ( coordinates.lat == null ? (\r\n        <Carga></Carga>\r\n    ) : (\r\n        <div>\r\n            <p>Lat: {coordinates.lat}</p>\r\n            <p>Long: {coordinates.long}</p>\r\n        \r\n        </div>\r\n    )\r\n  );\r\n\r\n}\r\n\r\nexport default Coords;","import React, { Fragment, useState } from 'react'; \r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\nimport SelColores from './SelColores';\r\nimport Contador from './Contador';\r\nimport ContadorConHook from './ContadorConHook';\r\nimport Coordenadas from './Coordenadas';\r\nimport Coords from '../hooks/useCoordenadasConHooks';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // aqui uso el hook useState para comenzar con una array que tiene un valor por defecto:\r\n    const [categorias, setCategorias] = useState(['Dragon Ball Z', 'Final fantasy 7']);\r\n    const [color, setcolor] = useState(null);\r\n    \r\n\r\n        return ( \r\n            <Fragment>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategorias={setCategorias}></AddCategory>\r\n                <hr/>\r\n                <SelColores color={color => setcolor(color)}></SelColores>\r\n                <hr></hr>\r\n                <p>Color actual: { color} </p>\r\n\r\n                <Contador color={color} ></Contador>\r\n                <ContadorConHook></ContadorConHook> \r\n                <hr/>\r\n                <Coordenadas></Coordenadas>\r\n\r\n                <hr></hr>\r\n                <p>Informaci√≥n del HOOK Coords (useCoordenadasConHooks):</p>\r\n                <Coords></Coords>\r\n                \r\n                <ol>\r\n                    {\r\n                        categorias.map( category => {\r\n                            return <GifGrid key={category} category={category} col={color}></GifGrid>\r\n                            })\r\n                    }\r\n                </ol>\r\n                \r\n            </Fragment>\r\n        )\r\n    \r\n}\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n/*Componentes: */\r\nimport GifExpertApp from './components/GifExpertApp';\r\n/*Estilos: */\r\nimport './index.css';\r\n\r\nReactDOM.render( < GifExpertApp />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}